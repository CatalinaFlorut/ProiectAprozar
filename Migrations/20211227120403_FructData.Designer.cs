// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectAprozar.Data;

namespace ProiectAprozar.Migrations
{
    [DbContext(typeof(ProiectAprozarContext))]
    [Migration("20211227120403_FructData")]
    partial class FructData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProiectAprozar.Models.Categorie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DenumireCategorie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FructDataID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FructDataID");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("ProiectAprozar.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("ProiectAprozar.Models.Cos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantitate")
                        .HasColumnType("int");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<int>("FructID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.HasIndex("FructID");

                    b.ToTable("Cos");
                });

            modelBuilder.Entity("ProiectAprozar.Models.Fruct", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Denumire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FructDataID")
                        .HasColumnType("int");

                    b.Property<int>("Pret")
                        .HasColumnType("int");

                    b.Property<string>("TaraOrigine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FructDataID");

                    b.ToTable("Fruct");
                });

            modelBuilder.Entity("ProiectAprozar.Models.FructCategorie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategorieID")
                        .HasColumnType("int");

                    b.Property<int?>("FructDataID")
                        .HasColumnType("int");

                    b.Property<int>("FructID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategorieID");

                    b.HasIndex("FructDataID");

                    b.HasIndex("FructID");

                    b.ToTable("FructCategorie");
                });

            modelBuilder.Entity("ProiectAprozar.Models.FructData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ID");

                    b.ToTable("FructData");
                });

            modelBuilder.Entity("ProiectAprozar.Models.Categorie", b =>
                {
                    b.HasOne("ProiectAprozar.Models.FructData", null)
                        .WithMany("Categorii")
                        .HasForeignKey("FructDataID");
                });

            modelBuilder.Entity("ProiectAprozar.Models.Cos", b =>
                {
                    b.HasOne("ProiectAprozar.Models.Client", "Client")
                        .WithMany("Cosuri")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectAprozar.Models.Fruct", "Fruct")
                        .WithMany("Cosuri")
                        .HasForeignKey("FructID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProiectAprozar.Models.Fruct", b =>
                {
                    b.HasOne("ProiectAprozar.Models.FructData", null)
                        .WithMany("Fructe")
                        .HasForeignKey("FructDataID");
                });

            modelBuilder.Entity("ProiectAprozar.Models.FructCategorie", b =>
                {
                    b.HasOne("ProiectAprozar.Models.Categorie", "Categorie")
                        .WithMany("FrutcCategorii")
                        .HasForeignKey("CategorieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectAprozar.Models.FructData", null)
                        .WithMany("FructCategorii")
                        .HasForeignKey("FructDataID");

                    b.HasOne("ProiectAprozar.Models.Fruct", "Fruct")
                        .WithMany("FructCategorii")
                        .HasForeignKey("FructID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
